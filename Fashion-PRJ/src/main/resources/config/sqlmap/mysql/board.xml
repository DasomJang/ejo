<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ejo.repository.mapper.BoardMapper">
    <!-- 상세: 게시물 상세 메인 사진 조회 -->
    <select id="selectBoardFile" parameterType="int" resultType="boardFile">
    	select file_no as fileNo, board_no as boardNo, file_path as filePath, ori_file_name as oriFileName, real_file_name as realFileName
    	  from t2_board_file
    	 where board_no = #{boardNo}
    </select>
    <!-- 상세: 게시물  상세 내용 조회 -->
    <select id="selectOneBoard" parameterType="int" resultType="board">
    	select board_no as boardNo, content_theme as contentTheme, content_note as contentNote, content_tip as contentTip
    	  from t2_board
    	 where board_no = #{boardNo}
    </select>   
       
    <!-- 상세: 게시물 상세 댓글 목록 조회 -->
    <select id="selectCommentList" parameterType="int" resultType="boardComment">
    	select comment_no as commentNo, board_no as boardNo, id, content, reg_date as regDate
    	  from t2_board_comment
    	 where board_no = #{boardNo}
    	 order by comment_no desc 
    </select>
    
    <!-- 상세: 게시물 상세 댓글 등록  -->
    <insert id="insertBoardComment" parameterType="boardComment">
    	<selectKey keyProperty="commentNo" resultType="int">
        	SELECT LAST_INSERT_ID()
    	</selectKey>
    	insert into t2_board_comment(comment_no, board_no, id, content)
    	values (#{commentNo}, #{boardNo}, #{id}, #{content})
    </insert>
    
    <!-- 상세: 게시물 상세 등록한 댓글 조회 -->
    <select id="selectRegComment" parameterType="int" resultType="boardComment">
    	select comment_no as commentNo, board_no as boardNo, id, content, reg_date as regDate
		  from t2_board_comment
		 where comment_no = #{commentNo}
    </select>
    
    <!-- 상세: 게시물 상세 댓글 수정 -->
    <update id="updateBoardComment" parameterType="boardComment">
    	update t2_board_comment
    	   set content = #{content}
    	 where comment_no = #{commentNo}
    </update>
    
    <!-- 상세: 게시물 상세 댓글 삭제 -->
    <delete id="deleteBoardComment" parameterType="int">
    	delete from t2_board_comment
    	 where comment_no = #{commentNo}
    </delete>
    
    <!-- 상세: 게시물  상세 아이템 사진 조회 -->
    <select id="selectBoardItem" parameterType="int" resultType="itemFile">
    	select item_no as itemNo, board_no as boardNo, file_path as filePath, ori_file_name as oriFileName, real_file_name as realFileName
    	  from t2_item_file
    	 where board_no = #{boardNo}
    </select>
    
    
    
    <!-- 테마 리스트 조회 -->
    
    <!-- 
    <resultMap id = "themeMap" type = "theme">
    	<result column="theme_code" property="themeCode"/>
    	<result column="theme_name" property="themeName"/>
    	<result column="file_path" property="filePath"/>
    	<result column="ori_file_name" property="oriFileName"/>
    	<result column="real_file_name" property="realFileName"/>
    </resultMap>
    -->
    
     
    <select id = "selectTheme" parameterType= "String" resultType = "theme">
    	select theme_code as themeCode , theme_name as themeName, file_path as filePath, ori_file_name as oriFileName , real_file_name as realFileName
    	  from t2_theme
    	 where theme_code like CONCAT(#{genderNo},'%')
    	 order by theme_code
    </select>
    
    <!-- 테마별 리스트 조회 -->
    
    <select id = "selectThemeBoard" parameterType = "map" resultType="board">
		select board_no as boardNo, theme_code as themeCode, 
			   (select count(*) from t2_recom_theme as rt where tb.board_no = rt.board_no) as recomCnt, 
			   (select count(*) from t2_board_comment as bc where tb.board_no = bc.board_no) as commentCnt, 
			   (select count(*) from t2_recom_theme as rt where id = #{id} and tb.board_no = rt.board_no) as idRecomCheck
		  from t2_board as tb
		 where theme_code = #{themeNo}  
		 order by board_no desc
    </select>
    
    <!-- 테마별 리스트 파일 조회 -->
    
    <select id = "selectThemeBoardFile" parameterType="String" resultType="boardFile">
		select tbf.file_no as fileNo, tbf.board_no as boardNo, tbf.file_path as filePath, tbf.ori_file_name as oriFileName, tbf.real_file_name as realFileName
		 from t2_board as tb , t2_board_file as tbf
		where tb.board_no = tbf.board_no and tb.theme_code = #{themeNo}
		order by tb.board_no desc
    </select>
    
    <!-- 테마별 리스트 추천 입력 -->
    <insert id = "insertBoardRecom" parameterType="boardRecom">
	    insert into t2_recom_theme (board_no, id) 
	    values ( #{boardNo}, #{id} )    	
    </insert>
    
    
    <!-- 테마별 리스트 아이디별 추천 확인 -->
    <select id="selectRecomCount" resultType="int" parameterType="boardRecom">
		select count(*) as rCnt
		  from t2_recom_theme
		 WHERE id = #{id}
		   AND board_no = #{boardNo}      
    </select>
    
    <!-- 테마별 리스트 추천 삭제 -->
    <insert id = "deleteBoardRecom" parameterType="boardRecom">
	    delete from t2_recom_theme  
	    where board_no = #{boardNo} 
	      and id = #{id}    	
    </insert>
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <!-- 상세: 점수 갯수 조회 -->
    <select id="selectBoardScoreCnt" parameterType="int" resultType="int">
    	select count(*)
		  from t2_score
		 where board_no = #{boardNo}
    </select>
    
    <!-- 상세: 평점별 점수 갯수 조회 -->
    <select id="selectBoardScoreGradeCnt" parameterType="boardScore" resultType="int">
    	select count(*)
		  from t2_score
		 where board_no = #{boardNo}
		   and code_value = #{codeValue}
    </select>
    
    <!-- 상세: 점수 투표 중복 확인 위한 해당 id, boardNo 값에 따른 갯수 조회 -->
    <select id="selectOneBoardScore" parameterType="boardScore" resultType="int">
    	select count(*)
		  from t2_score
		 where id = #{id}
		   and board_no = #{boardNo}
    </select>
    
    <!-- 상세: 게시물 상세 점수 등록 -->
    <insert id="insertBoardScore" parameterType="boardScore">
    	insert into t2_score(id, board_no, code_value)
    	values (#{id}, #{boardNo}, #{codeValue})    
    </insert>
    
</mapper>