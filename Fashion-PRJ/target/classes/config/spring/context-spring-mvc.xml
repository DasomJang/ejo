<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"	    
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"	
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
					    http://www.springframework.org/schema/beans/spring-beans.xsd
					    http://www.springframework.org/schema/context   
					    http://www.springframework.org/schema/context/spring-context.xsd
					    http://www.springframework.org/schema/mvc
					    http://www.springframework.org/schema/mvc/spring-mvc.xsd
					    http://www.springframework.org/schema/aop
					    http://www.springframework.org/schema/aop/spring-aop.xsd
					    http://www.springframework.org/schema/tx
					    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- mybatis 객체 준비 -->
	<context:property-placeholder location="classpath:config/mybatis/db.properties"/>

	<!-- DBCP 사용 -->	
	<bean id="dataSource" 
          class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close"
      	  p:driverClassName="${jdbc.oracle.driver}"
          p:url="${jdbc.oracle.url}"
          p:username="${jdbc.oracle.username}" 
          p:password="${jdbc.oracle.password}" />
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis/sqlMapConfig.xml" />		
		<property name="mapperLocations" value="classpath:config/sqlmap/mysql/*.xml" />			
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- 트랜잭션 처리 -->
	<!-- DataSource를 transaction 관리함 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 공통기능 클래스 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
	    	<!-- service에서 name의 메소드만 트랜잭션 걸어줌 -->
		    <tx:method name="*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	
	<!-- transaction 처리 -->
	<aop:config>
		<aop:pointcut id="tranMethod"
		              expression="execution(public * ejo..*ServiceImpl.*(..)) "/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="tranMethod" />
	</aop:config>

</beans>